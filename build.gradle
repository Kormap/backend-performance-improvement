buildscript {
    ext {
        queryDslVersion = "5.0.0"
    }
}

plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.2'
    id 'io.spring.dependency-management' version '1.1.6'
}

group = 'com.performance'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-web-services'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-devtools'
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.0.2'
    implementation "com.querydsl:querydsl-jpa:$queryDslVersion:jakarta"
    implementation 'com.amazonaws:aws-java-sdk-s3:1.12.691'

    implementation 'org.postgresql:postgresql:42.6.0'
    implementation 'com.mysql:mysql-connector-j'
    implementation 'com.mailjet:mailjet-client:5.2.5'

    //cache 관련 설정
    implementation 'org.springframework.boot:spring-boot-starter-cache'
    implementation 'org.ehcache:ehcache:3.8.1' // Ehcache3
    implementation 'javax.cache:cache-api:1.1.1'
    implementation 'javax.xml.bind:jaxb-api:2.3.1'
    implementation 'org.glassfish.jaxb:jaxb-runtime:2.3.1'

    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    annotationProcessor "com.querydsl:querydsl-apt:$queryDslVersion:jakarta"
    annotationProcessor "jakarta.persistence:jakarta.persistence-api"

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

bootRun {
    String activeProfile = System.getProperty("spring.profiles.active") ?: "local"
    println "=========ENV : $activeProfile"
    systemProperty "spring.profiles.active", activeProfile
}

// Querydsl 설정
def querydslSrcDir = 'src/main/generated'

clean {
    delete file(querydslSrcDir)
}

tasks.withType(JavaCompile) {
    options.generatedSourceOutputDirectory = file(querydslSrcDir)
    options.annotationProcessorPath = configurations.annotationProcessor
}

tasks.named('test') {
    useJUnitPlatform()
}
